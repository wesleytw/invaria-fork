{"version":3,"file":"static/js/269.d9f31b12.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/react/node_modules/@magic-sdk/provider/src/core/sdk-exceptions.ts"],"sourcesContent":["import { JsonRpcError, RPCErrorCode, SDKErrorCode, SDKWarningCode } from '@magic-sdk/types';\nimport { isJsonRpcErrorCode } from '../util/type-guards';\nimport { SDKEnvironment } from './sdk-environment';\nimport { Extension } from '../modules/base-extension';\n\n// --- Error/warning classes\n\n/**\n * This error type represents internal SDK errors. This could be developer\n * mistakes (or Magic's mistakes), or execution errors unrelated to standard\n * JavaScript exceptions.\n */\nexport class MagicSDKError extends Error {\n  __proto__ = Error;\n\n  constructor(public code: SDKErrorCode, public rawMessage: string) {\n    super(`Magic SDK Error: [${code}] ${rawMessage}`);\n    Object.setPrototypeOf(this, MagicSDKError.prototype);\n  }\n}\n\n/**\n * This error type communicates exceptions that occur during execution in the\n * Magic `<iframe>` context.\n */\nexport class MagicRPCError extends Error {\n  __proto__ = Error;\n\n  public code: RPCErrorCode | number;\n  public rawMessage: string;\n\n  constructor(sourceError?: JsonRpcError | null) {\n    super();\n\n    const codeNormalized = Number(sourceError?.code);\n    this.rawMessage = sourceError?.message || 'Internal error';\n    this.code = isJsonRpcErrorCode(codeNormalized) ? codeNormalized : RPCErrorCode.InternalError;\n    this.message = `Magic RPC Error: [${this.code}] ${this.rawMessage}`;\n\n    Object.setPrototypeOf(this, MagicRPCError.prototype);\n  }\n}\n\n/**\n * In contrast to `SDKError` objects, this \"warning\" type communicates important\n * context that does not rise to the level of an exception. These should be\n * logged rather than thrown.\n */\nexport class MagicSDKWarning {\n  public message: string;\n\n  constructor(public code: SDKWarningCode, public rawMessage: string) {\n    this.message = `Magic SDK Warning: [${code}] ${rawMessage}`;\n  }\n\n  /**\n   * Logs this warning to the console.\n   */\n  public log() {\n    console.warn(this.message);\n  }\n}\n\n/**\n * This error type is reserved for communicating errors that arise during\n * execution of Magic SDK Extension methods. Compare this to the `SDKError`\n * type, specifically in context of Extensions.\n */\nexport class MagicExtensionError<TData = any> extends Error {\n  __proto__ = Error;\n\n  constructor(ext: Extension<string>, public code: string | number, public rawMessage: string, public data: TData) {\n    super(`Magic Extension Error (${ext.name}): [${code}] ${rawMessage}`);\n    Object.setPrototypeOf(this, MagicExtensionError.prototype);\n  }\n}\n\n/**\n * In contrast to `MagicExtensionError` objects, this \"warning\" type\n * communicates important context that does not rise to the level of an\n * exception. These should be logged rather than thrown.\n */\nexport class MagicExtensionWarning {\n  public message: string;\n\n  constructor(ext: Extension<string>, public code: string | number, public rawMessage: string) {\n    this.message = `Magic Extension Warning (${ext.name}): [${code}] ${rawMessage}`;\n  }\n\n  /**\n   * Logs this warning to the console.\n   */\n  public log() {\n    console.warn(this.message);\n  }\n}\n\n// --- SDK error factories\n\nexport function createMissingApiKeyError() {\n  return new MagicSDKError(\n    SDKErrorCode.MissingApiKey,\n    'Please provide an API key that you acquired from the Magic developer dashboard.',\n  );\n}\n\nexport function createModalNotReadyError() {\n  return new MagicSDKError(SDKErrorCode.ModalNotReady, 'Modal is not ready.');\n}\n\nexport function createMalformedResponseError() {\n  return new MagicSDKError(SDKErrorCode.MalformedResponse, 'Response from the Magic iframe is malformed.');\n}\n\nexport function createExtensionNotInitializedError(member: string) {\n  return new MagicSDKError(\n    SDKErrorCode.ExtensionNotInitialized,\n    `Extensions must be initialized with a Magic SDK instance before \\`Extension.${member}\\` can be accessed. Do not invoke \\`Extension.${member}\\` inside an extension constructor.`,\n  );\n}\n\nexport function createIncompatibleExtensionsError(extensions: Extension<string>[]) {\n  let msg = `Some extensions are incompatible with \\`${SDKEnvironment.sdkName}@${SDKEnvironment.version}\\`:`;\n\n  extensions\n    .filter((ext) => typeof ext.compat !== 'undefined' && ext.compat !== null)\n    .forEach((ext) => {\n      const compat = ext.compat![SDKEnvironment.sdkName];\n\n      /* istanbul ignore else */\n      if (typeof compat === 'string') {\n        msg += `\\n  - Extension \\`${ext.name}\\` supports version(s) \\`${compat}\\``;\n      } else if (!compat) {\n        msg += `\\n  - Extension \\`${ext.name}\\` does not support ${SDKEnvironment.platform} environments.`;\n      }\n\n      // Else case is irrelevant here here\n      // (we filter out extensions with missing `compat` field)\n    });\n\n  return new MagicSDKError(SDKErrorCode.IncompatibleExtensions, msg);\n}\n\nexport function createInvalidArgumentError(options: {\n  procedure: string;\n  argument: number;\n  expected: string;\n  received: string;\n}) {\n  /**\n   * Parses the argument index (given by `argument`) to attach the correct ordinal suffix.\n   * (i.e.: 1st, 2nd, 3rd, 4th, etc.)\n   */\n  const ordinalSuffix = (i: number) => {\n    const iAdjusted = i + 1; // Argument is zero-indexed.\n    const j = iAdjusted % 10;\n    const k = iAdjusted % 100;\n    if (j === 1 && k !== 11) return `${iAdjusted}st`;\n    if (j === 2 && k !== 12) return `${iAdjusted}nd`;\n    if (j === 3 && k !== 13) return `${iAdjusted}rd`;\n    return `${iAdjusted}th`;\n  };\n\n  return new MagicSDKError(\n    SDKErrorCode.InvalidArgument,\n    `Invalid ${ordinalSuffix(options.argument)} argument given to \\`${options.procedure}\\`.\\n` +\n      `  Expected: \\`${options.expected}\\`\\n` +\n      `  Received: \\`${options.received}\\``,\n  );\n}\n\n// --- SDK warning factories\n\nexport function createDuplicateIframeWarning() {\n  return new MagicSDKWarning(SDKWarningCode.DuplicateIframe, 'Duplicate iframes found.');\n}\n\nexport function createSynchronousWeb3MethodWarning() {\n  return new MagicSDKWarning(\n    SDKWarningCode.SyncWeb3Method,\n    'Non-async web3 methods are deprecated in web3 > 1.0 and are not supported by the Magic web3 provider. Please use an async method instead.',\n  );\n}\n\nexport function createReactNativeEndpointConfigurationWarning() {\n  return new MagicSDKWarning(\n    SDKWarningCode.ReactNativeEndpointConfiguration,\n    `CUSTOM DOMAINS ARE NOT SUPPORTED WHEN USING MAGIC SDK WITH REACT NATIVE! The \\`endpoint\\` parameter SHOULD NOT be provided. The Magic \\`<iframe>\\` is automatically wrapped by a WebView pointed at \\`${SDKEnvironment.defaultEndpoint}\\`. Changing this default behavior will lead to unexpected results and potentially security-threatening bugs.`,\n  );\n}\n\nexport function createDeprecationWarning(options: {\n  method: string;\n  removalVersions: { [P in 'magic-sdk' | '@magic-sdk/react-native']: string };\n  useInstead?: string;\n}) {\n  const { method, removalVersions, useInstead } = options;\n\n  const removalVersion = removalVersions[SDKEnvironment.sdkName];\n  const useInsteadSuffix = useInstead ? ` Use \\`${useInstead}\\` instead.` : '';\n  const message = `\\`${method}\\` will be removed from \\`${SDKEnvironment.sdkName}\\` in version \\`${removalVersion}\\`.${useInsteadSuffix}`;\n\n  return new MagicSDKWarning(SDKWarningCode.DeprecationNotice, message);\n}\n"],"names":["o","env","NODE_ENV","ve","e","Pe","Ce","K","ge","Ne","bn","enumerable","configurable","writable","value","ir","Ln","exports","Ge","get","v","l","a","n","O","Y","L","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","MAX_SAFE_COMPONENT_LENGTH","H","compareIdentifiers","rcompareIdentifiers","loose","includePrerelease","t","Ke","console","s","Z","Do","c","argument","procedure"],"sourceRoot":""}